{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/contactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","className","styles","form","preventDefault","type","pattern","title","required","onChange","Filter","input","ContactList","contactList","onDeleteContact","map","id","item","button","onClick","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","setItem","stringify","filteredContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","newContacts","uuidv4","alert","prevState","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.774f94c4.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport styles from \"./ContactForm.module.css\";\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit( name, number );\n\n    // reset form\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleFormSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\nexport default ContactForm;","import styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ onChange, value }) => (\n  <label>\n    Find contacts by name\n    <input className={styles.input} onChange={onChange} value={value} />\n  </label>\n);\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\nexport default Filter;","import styles from \"./contactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contactList, onDeleteContact }) => {\n  return (\n    <ol className={styles.ContactList}>\n      {contactList.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <b>{name}: </b>\n          <span>{number}</span>\n          <button className={styles.button} onClick={() => onDeleteContact(id)}>\n            remove\n          </button>\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nContactList.propTypes = {\n  contactList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []\n  );\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(\n    () => window.localStorage.setItem(\"contacts\", JSON.stringify(contacts)),\n    [contacts]\n  );\n\n  const addContact = (name, number) => {\n    const newContacts = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n    const currentContacts = contacts.map((contact) => contact.name);\n\n    if (currentContacts.includes(newContacts.name)) {\n      alert(`${newContacts.name} is already in contacts!`);\n    } else {\n      setContacts((prevState) => [...prevState, newContacts]);\n    }\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prevState) =>\n      prevState.filter((prevState) => prevState.id !== contactId)\n    );\n  };\n\n  const filterContactsHandler = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n  return (\n    <div className=\"Wrapper\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts:</h2>\n      <Filter onChange={filterContactsHandler} value={filter} />\n      <ContactList\n        contactList={filteredContacts}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contactList_item__1Zfmy\",\"button\":\"contactList_button__18MOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}